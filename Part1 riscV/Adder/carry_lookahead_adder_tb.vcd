$date
	Sat Dec 04 19:36:27 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module carry_lookahead_adder_tb $end
$var wire 65 ! result [64:0] $end
$var reg 64 " X [63:0] $end
$var reg 64 # Y [63:0] $end
$scope module carry_lookahead_adder_instance $end
$var wire 64 $ X [63:0] $end
$var wire 64 % Y [63:0] $end
$var wire 65 & result [64:0] $end
$var wire 64 ' P [63:0] $end
$var wire 64 ( G [63:0] $end
$var wire 65 ) C [64:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk1[32] $end
$upscope $end
$scope begin genblk1[33] $end
$upscope $end
$scope begin genblk1[34] $end
$upscope $end
$scope begin genblk1[35] $end
$upscope $end
$scope begin genblk1[36] $end
$upscope $end
$scope begin genblk1[37] $end
$upscope $end
$scope begin genblk1[38] $end
$upscope $end
$scope begin genblk1[39] $end
$upscope $end
$scope begin genblk1[40] $end
$upscope $end
$scope begin genblk1[41] $end
$upscope $end
$scope begin genblk1[42] $end
$upscope $end
$scope begin genblk1[43] $end
$upscope $end
$scope begin genblk1[44] $end
$upscope $end
$scope begin genblk1[45] $end
$upscope $end
$scope begin genblk1[46] $end
$upscope $end
$scope begin genblk1[47] $end
$upscope $end
$scope begin genblk1[48] $end
$upscope $end
$scope begin genblk1[49] $end
$upscope $end
$scope begin genblk1[50] $end
$upscope $end
$scope begin genblk1[51] $end
$upscope $end
$scope begin genblk1[52] $end
$upscope $end
$scope begin genblk1[53] $end
$upscope $end
$scope begin genblk1[54] $end
$upscope $end
$scope begin genblk1[55] $end
$upscope $end
$scope begin genblk1[56] $end
$upscope $end
$scope begin genblk1[57] $end
$upscope $end
$scope begin genblk1[58] $end
$upscope $end
$scope begin genblk1[59] $end
$upscope $end
$scope begin genblk1[60] $end
$upscope $end
$scope begin genblk1[61] $end
$upscope $end
$scope begin genblk1[62] $end
$upscope $end
$scope begin genblk1[63] $end
$upscope $end
$upscope $end
$scope task display $end
$upscope $end
$scope task display2 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b110 )
b11 (
b11 '
b110 &
b11 %
b11 $
b11 #
b11 "
b110 !
$end
#12
b11111010000 !
b11111010000 &
b11111010000 )
b1111101000 '
b1111101000 (
b1111101000 #
b1111101000 %
b1111101000 "
b1111101000 $
#23
b11110110 )
b11000100 !
b11000100 &
b1111011 '
b1001001 (
b1001001 #
b1001001 %
b1111011 "
b1111011 $
#34
b111101100 )
b1100101000 !
b1100101000 &
b110010 (
b1011110110 '
b1000110010 #
b1000110010 %
b11110110 "
b11110110 $
#45
b100110111111000110 )
b1101100100000011100 !
b1101100100000011100 &
b1011011011111111011 '
b10001000000100001 (
b1010001000110110011 #
b1010001000110110011 %
b11011011001101001 "
b11011011001101001 $
#56
b1100000 )
b1101110 !
b1101110 &
b111110 '
b110000 (
b110010 #
b110010 %
b111100 "
b111100 $
#58
